[main]

q1 = CREATE TABLE IF NOT EXISTS  coins_detail(id varchar(50) NOT NULL, usd_current_price numeric NOT NULL, date_info date NOT NULL, json_response jsonb NOT NULL)
q2 = CREATE TABLE IF NOT EXISTS  coins_price_detail(id varchar(50) NOT NULL,year integer NOT NULL,month integer NOT NULL,min_price numeric NOT NULL,max_price numeric NOT NULL)
q3 = CREATE TABLE IF NOT EXISTS coins_price_detail_temp (id varchar(50) NOT NULL, year integer NOT NULL,month integer NOT NULL,min_price numeric NOT NULL, max_price numeric NOT NULL); with cte_coins  as(select distinct id, year, month, min_price, max_price from coins_price_detail) insert into coins_price_detail_temp select id, year,month,  min_price,max_price from cte_coins; truncate table coins_price_detail;insert into coins_price_detail select id, year,month, min_price,max_price from coins_price_detail_temp; drop table if exists coins_price_detail_temp;
q4 = CREATE TABLE IF NOT EXISTS coins_detail_temp (id varchar(50) NOT NULL, usd_current_price numeric NOT NULL, date_info date NOT NULL, json_response jsonb NOT NULL );with cte_coins as(select distinct id, usd_current_price, date_info, json_response from coins_detail) insert into coins_detail_temp select  id, usd_current_price, date_info, json_response from cte_coins; truncate table coins_detail;insert into coins_detail select id, usd_current_price, date_info, json_response  from coins_detail_temp; drop table if exists coins_detail_temp;
q5 = select id,date_info, current_price, price_average from( with cte as (select id,   date_info, min(usd_current_price) as current_price  from coins_detail   group by id, date_info order by id, date_info desc) select id, date_info, current_price , row_number() over(partition by  id order by date_info) as r_id,  avg(current_price) over(partition by  id order by date_info) as price_average  from cte group by id, date_info,current_price) as q1
